name: SQLMesh Deployment

on:
  workflow_call:
    inputs:
     environment:
        required: false
        type: string
     vm-image:
        required: true
        type: string

jobs:
  Deploy-SQLMesh:
    runs-on: ${{ inputs.vm-image }}
    environment: ${{ inputs.environment}}


    steps:
      # Checkout the repository code
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      # Install SQLMesh
      - name: Install SQLMesh
        run: |
          pip install sqlmesh[databricks,postgres,github]
          pip install duckdb

      # Run SQLMesh
      - name: Run CI/CD Bot
        env:
          SQLMESH__GATEWAYS__DATABRICKS__CONNECTION__TYPE: "databricks"
          SQLMESH__DEFAULT_GATEWAY: "databricks"
        run: |
          sqlmesh_cicd -p ${{ github.workspace }} github --token ${{ secrets.GITHUB_TOKEN }} run-all

      # Set up Databricks environment variables (using GitHub Secrets)
      - name: Set up Databricks Environment Variables
        run: |
          echo "DATABRICKS_HOST=${{ secrets.DATABRICKS_HOST }}" >> $GITHUB_ENV
          echo "DATABRICKS_TOKEN=${{ secrets.DATABRICKS_TOKEN }}" >> $GITHUB_ENV
          echo "SQLMESH_DEFAULT_GATEWAY=databricks" >> $GITHUB_ENV

      # Run `sqlmesh plan` and `sqlmesh apply` for the environment
      - name: Run SQLMesh Plan & Apply
        run: |
          sqlmesh plan --environment ${{ inputs.environment }}
          sqlmesh apply --environment ${{ inputs.environment }}

      # Run SQLMesh models in the environment
      - name: Run SQLMesh Models
        run: |
          sqlmesh run --environment ${{ inputs.environment }}
